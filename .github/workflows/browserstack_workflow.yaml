name: browserstack workflow

on:
  workflow_call:
    secrets:
      BROWSERSTACK_KEY:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Wait for Browserstack to have available automation slots
        run: | 
          while true; do
            # response=$(curl -u ${{ secrets.BROWSERSTACK_KEY }} https://api.browserstack.com/automate/plan.json)
            # if [[ $(echo $response | jq '.parallel_sessions_running < .parallel_sessions_max_allowed') = true ]]; then
            if [[ $(echo '{"parallel_sessions_running":5,"parallel_sessions_max_allowed":5}' | jq '.parallel_sessions_running < .parallel_sessions_max_allowed') = true ]]; then
              break
            fi
            echo "Browserstack is busy. Waiting 10s to try again"
            sleep 10
          done
        id: availability-request
        timeout-minutes: 1

      # - name: Parse availability from Browserstack
      #   run: |
      #     parallel_sessions_running=$(echo '${{ steps.availability-request.outputs.RESPONSE }}' | jq -r '.parallel_sessions_running')
      #     parallel_sessions_max_allowed=$(echo '${{ steps.availability-request.outputs.RESPONSE }}' | jq -r '.parallel_sessions_max_allowed')
      #     echo "SESSIONS_RUNNING=$parallel_sessions_running" >> $GITHUB_OUTPUT
      #     echo "MAX_ALLOWED_SESSIONS=$parallel_sessions_max_allowed" >> $GITHUB_OUTPUT
      #   id: parse-availability-response
      #   continue-on-error: true
      # - name: Use params in next step
      #   run: |
      #     echo "Parallel running: ${{ steps.parse-availability-response.outputs.SESSIONS_RUNNING}}"
      #     echo "Max Parallel: ${{ steps.parse-availability-response.outputs.MAX_ALLOWED_SESSIONS}}"